

# This file was *autogenerated* from the file size_reduction.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_5 = Integer(5); _sage_const_3 = Integer(3); _sage_const_7 = Integer(7); _sage_const_10 = Integer(10); _sage_const_0 = Integer(0)
def size_reduction(B):
    n = len(B)
    B = matrix(B)
    G, mu = B.gram_schmidt()
    for i in range(n):
        for j in range(i - _sage_const_1 , -_sage_const_1 , -_sage_const_1 ):
            if mu[i][j].abs() > _sage_const_1  / _sage_const_2 :
                q = mu[i][j].round()
                B[i] -= q * B[j]
                mu[i] -= q * mu[j]
    return B


B = [vector([_sage_const_5 , -_sage_const_3 , -_sage_const_7 ]), vector([_sage_const_2 , -_sage_const_7 , -_sage_const_7 ]), vector([_sage_const_3 , -_sage_const_10 , _sage_const_0 ])]
print(size_reduction(B))

